import React, {useState} from 'react';
import path from 'path';
import fs from 'fs'
import type { InferGetStaticPropsType, NextPage } from 'next'
import Head from 'next/head'
import Image from 'next/image'
import { Nav } from '../component/nav/nav';
import { getAllPosts, getPostBySlug } from '../lib/api';
import styles from '../styles/Home.module.css'
import Link from 'next/link';
import { sliceString } from '../lib/sliceString';
import ReactPaginate from 'react-paginate'; // インポートはこれで完了！
type Props = InferGetStaticPropsType<typeof getStaticProps>;
type Post = {
  slug:string,
  content:string,
  title:string,
  date:string,
  img: string,
  categories:string[]
}
export async function getStaticProps() {
  const allPosts = getAllPosts(["slug","title","date","content","img","categories"])
  return {
    props:{
        allPosts:JSON.parse(JSON.stringify(allPosts)),
    }
  }
}

const Home: NextPage<Props> = ({allPosts}) => {
  console.log(allPosts)
  const [ offset, setOffset ] = useState(0); // 何番目のアイテムから表示するか
  const perPage: number = 5; // 1ページあたりに表示したいアイテムの数
  // クリック時のfunction
  const handlePageChange = (data:any) => {
    let page_number = data['selected']; // クリックした部分のページ数が{selected: 2}のような形で返ってくる
    setOffset(page_number*perPage); // offsetを変更し、表示開始するアイテムの番号を変更
  }
  return (
    <div>
      <Head>
        <title>定期ぼやきグラム</title>
        <meta name="description" content="Generated by create next app" />
        <link type="image/png" sizes="32x32" rel="icon" href="/icons8-chat-bubble-32.png"/>
        {/* <link rel="icon" href="/favicon.ico" /> */}
      </Head>
        <div>
        {allPosts
        .slice(offset, offset + perPage)
        .map((post:Post)=>{
          return (
          <div className={styles.post_container} key={post.slug}>
          <Link href={`${post.slug}`} >
            <a><h1 className={styles.post_title}>{post.title}</h1></a>
          </Link>
            {post.categories?.map((category,i) => (
              <Link href={`/categories/${category}`} key={i}>
                <a className={`${styles.category_link}`}>{category}</a>
              </Link>
            ))}
            <h4 className={styles.post_date}>{post.date}</h4>
            <p className={styles.post_content}>{sliceString(post.content)}</p>
            {post.img !== "" ? <div className={styles.post_img}><img src={post.img} alt="" /></div> : ""}
          </div>
          )})}
      </div>
      <ReactPaginate
        previousLabel={'<'}
        nextLabel={'>'}
        breakLabel={'...'}
        pageCount={Math.ceil(allPosts.length/perPage)} 
        marginPagesDisplayed={1}
        pageRangeDisplayed={1}
        onPageChange={handlePageChange}
        containerClassName={'pagination'}
        activeClassName={'active'}
        previousClassName={'pagination__previous'} 
        nextClassName={'pagination__next'} 
        disabledClassName={'pagination__disabled'}
      />
    </div>
  )
}

export default Home
